import subprocess
import re
import os
import concurrent.futures

# ƒê∆∞·ªùng d·∫´n file dezoomify-rs.exe
DEZOOMIFY_PATH = "./dezoomify-rs.exe"  # ƒê·ªïi n·∫øu c·∫ßn
MAX_WORKERS = 4  # S·ªë lu·ªìng t·∫£i ƒë·ªìng th·ªùi

def get_input():
    """Y√™u c·∫ßu ng∆∞·ªùi d√πng nh·∫≠p URL tr·ª±c ti·∫øp ho·∫∑c k√©o file v√†o CMD"""
    user_input = input("üìÇ K√©o file input.txt ho·∫∑c nh·∫≠p URL tr·ª±c ti·∫øp r·ªìi nh·∫•n Enter (nh·∫•n Ctrl+C ƒë·ªÉ tho√°t): ").strip()
    
    # X√≥a d·∫•u ngo·∫∑c k√©p n·∫øu c√≥ (do Windows t·ª± th√™m khi k√©o th·∫£)
    if user_input.startswith('"') and user_input.endswith('"'):
        user_input = user_input[1:-1]

    # Ki·ªÉm tra xem input c√≥ ph·∫£i l√† URL kh√¥ng
    if re.match(r'^https?://\S+', user_input):
        return "url", user_input
    
    # N·∫øu kh√¥ng ph·∫£i URL, coi nh∆∞ l√† ƒë∆∞·ªùng d·∫´n file
    if not os.path.exists(user_input):
        print("‚ùå L·ªói: File kh√¥ng t·ªìn t·∫°i ho·∫∑c URL kh√¥ng h·ª£p l·ªá. H√£y ki·ªÉm tra l·∫°i.")
        return None, None
    return "file", user_input

def read_urls_from_file(file_path):
    """ƒê·ªçc t·∫•t c·∫£ URL t·ª´ file txt"""
    with open(file_path, 'r', encoding='utf-8') as file:
        urls = re.findall(r'https?://\S+', file.read())  # T√¨m t·∫•t c·∫£ URL
    return urls

def download_image_with_dezoomify(url):
    """Ch·∫°y dezoomify-rs.exe ƒë·ªÉ t·∫£i ·∫£nh t·ª´ URL v·ªõi m·ª©c zoom t·ªëi ∆∞u"""
    if not os.path.exists(DEZOOMIFY_PATH):
        print(f"‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y {DEZOOMIFY_PATH}")
        return

    try:
        print(f"üîó B·∫Øt ƒë·∫ßu t·∫£i: {url}")

        process = subprocess.Popen(
            [DEZOOMIFY_PATH, url], 
            stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE,
            text=True
        )

        zoom_levels = []
        for line in iter(process.stdout.readline, ''):
            print(line.strip())

            if "Which level do you want to download?" in line:
                if zoom_levels:
                    choice = 4 if 4 in zoom_levels else max(zoom_levels)
                    print(f"‚úÖ Ch·ªçn m·ª©c zoom: {choice}")
                    process.stdin.write(f"{choice}\n")
                    process.stdin.flush()
                break

            match = re.findall(r'(\d+)\..+?\(\s*(\d+) x\s*(\d+)', line)
            if match:
                zoom_levels.extend(int(opt[0]) for opt in match)

        process.communicate()
        print(f"‚úÖ Ho√†n th√†nh t·∫£i: {url}")

    except Exception as e:
        print(f"‚ùå L·ªói khi t·∫£i {url}: {e}")

def main():
    while True:
        try:
            input_type, input_value = get_input()
            
            if input_type and input_value:
                if input_type == "url":
                    urls = [input_value]  # Ch·ªâ m·ªôt URL duy nh·∫•t
                else:  # input_type == "file"
                    urls = read_urls_from_file(input_value)

                with concurrent.futures.ThreadPoolExecutor(max_workers=MAX_WORKERS) as executor:
                    executor.map(download_image_with_dezoomify, urls)

                print("üéâ Ho√†n t·∫•t t·∫£i t·∫•t c·∫£ ·∫£nh!")
                print("-" * 50)  # Th√™m ƒë∆∞·ªùng k·∫ª ƒë·ªÉ ph√¢n bi·ªát c√°c l·∫ßn ch·∫°y

        except KeyboardInterrupt:
            print("\nüëã ƒê√£ tho√°t ch∆∞∆°ng tr√¨nh!")
            break
        except Exception as e:
            print(f"‚ùå L·ªói kh√¥ng mong mu·ªën: {e}")
            print("-" * 50)

if __name__ == "__main__":
    main()
